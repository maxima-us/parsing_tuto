
type strnum = string wrap <ocaml t="Float.t" wrap="Float.of_string" unwrap="Float.to_string">
(* <ocaml valid = "fun s -> float_of_string s > 0."> *)




(* ============================================================ *)
(* INSTRUMENT *)
(* ============================================================ *)


type expected_instrument = { 
      ask <json name = "a">: (strnum * strnum * strnum)
    ; bid <json name = "b">: (strnum * strnum * strnum)
    ; last <json name = "c">: (strnum * strnum)
    ; vol <json name = "v">: (strnum * strnum)
    ; vwap <json name = "p">: (strnum * strnum)
    ; trades <json name = "t">: (int * int)
    ; low <json name = "l">: (strnum * strnum)
    ; high <json name = "h">: (strnum * strnum)
    ; o <json name = "o">: strnum
}




(* ============================================================ *)
(* OHLC *)
(* ============================================================ *)


type ohlc_item = (int * strnum * strnum * strnum * strnum * strnum * strnum * int)

type expected_ohlc = ohlc_item list




(* ============================================================ *)
(* ORDERBOOK *)
(* ============================================================ *)


type ask_item = (strnum * strnum * int)
type bid_item = (strnum * strnum * int)

type expected_ask_list = ask_item list
type expected_bid_list = bid_item list


type expected_orderbook = {
  asks: expected_ask_list
  ; bids: expected_bid_list
}




(* ============================================================ *)
(* TRADES *)
(* ============================================================ *)

(* SAMPLE RESPONSE
{
  "XXBTZUSD":[
    ["8943.10000","0.01000000",1588710118.4965,"b","m",""],
    ["8943.10000","4.52724239",1588710118.4975,"b","m",""],
    ["8941.10000","0.04000000",1588710129.8625,"b","m",""],
  ],
  "last":"1588712775751709062"
} *)

(* type oSide = B | S
type oType = M | L *)

(* //TODO type oSide and oType *)

type trade_item = (strnum * strnum * float * string * string * string)

type expected_trades = trade_item list